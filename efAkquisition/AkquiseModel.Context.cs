//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace efAkquisition
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AkquiseEntities : DbContext
    {
        public AkquiseEntities()
            : base("name=AkquiseEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tbl_Rating> tbl_Rating { get; set; }
        public virtual DbSet<tbl_Regisseure> tbl_Regisseure { get; set; }
        public virtual DbSet<tbl_Status> tbl_Status { get; set; }
        public virtual DbSet<tbl_Anbieter> tbl_Anbieter { get; set; }
        public virtual DbSet<tbl_Laender> tbl_Laender { get; set; }
        public virtual DbSet<tbl_Bearbeiter> tbl_Bearbeiter { get; set; }
        public virtual DbSet<qry_ProjekteASP> qry_ProjekteASP { get; set; }
        public virtual DbSet<tbl_Auswertungsart> tbl_Auswertungsart { get; set; }
        public virtual DbSet<tbl_Lektoratseinschaetzung> tbl_Lektoratseinschaetzung { get; set; }
        public virtual DbSet<tbl_Projektart> tbl_Projektart { get; set; }
        public virtual DbSet<tbl_Sender> tbl_Sender { get; set; }
        public virtual DbSet<tbl_Verleih> tbl_Verleih { get; set; }
        public virtual DbSet<tbl_WE> tbl_WE { get; set; }
        public virtual DbSet<tbl_Personen> tbl_Personen { get; set; }
        public virtual DbSet<tbl_ProjektPersonRel> tbl_ProjektPersonRel { get; set; }
        public virtual DbSet<tbl_Firmen> tbl_Firmen { get; set; }
        public virtual DbSet<tbl_Funktionen> tbl_Funktionen { get; set; }
        public virtual DbSet<tbl_Genre> tbl_Genre { get; set; }
        public virtual DbSet<tbl_ProjektFirmaRel> tbl_ProjektFirmaRel { get; set; }
        public virtual DbSet<tbl_ProjektGenreRel> tbl_ProjektGenreRel { get; set; }
        public virtual DbSet<tbl_ProjektAuswertungsArtRel> tbl_ProjektAuswertungsArtRel { get; set; }
        public virtual DbSet<tbl_ProjektLandRel> tbl_ProjektLandRel { get; set; }
        public virtual DbSet<tbl_Themen> tbl_Themen { get; set; }
        public virtual DbSet<tbl_TV_Einschaetzung> tbl_TV_Einschaetzung { get; set; }
        public virtual DbSet<tbl_Projekte> tbl_Projekte { get; set; }
        public virtual DbSet<tbl_Land> tbl_Land { get; set; }
        public virtual DbSet<tbl_BlobProjekte> tbl_BlobProjekte { get; set; }
        public virtual DbSet<tbl_Jobs> tbl_Jobs { get; set; }
        public virtual DbSet<tbl_Links> tbl_Links { get; set; }
        public virtual DbSet<tbl_BadCharacters> tbl_BadCharacters { get; set; }
        public virtual DbSet<qry_ProjekteIndex> qry_ProjekteIndex { get; set; }
        public virtual DbSet<tbl_BlobData> tbl_BlobData { get; set; }
        public virtual DbSet<tbl_Warenkorb> tbl_Warenkorb { get; set; }
        public virtual DbSet<qry_Firmamatch> qry_Firmamatch { get; set; }
        public virtual DbSet<qry_Personmatch> qry_Personmatch { get; set; }
        public virtual DbSet<tbl_WarenkorbProjektRel> tbl_WarenkorbProjektRel { get; set; }
        public virtual DbSet<tbl_Filmformate> tbl_Filmformate { get; set; }
    
        public virtual int sp_UpdateFestivalAkt()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateFestivalAkt");
        }
    
        public virtual ObjectResult<qry_ProjekteIndex> sp_Warenkorbprojekte(string benutzer)
        {
            var benutzerParameter = benutzer != null ?
                new ObjectParameter("benutzer", benutzer) :
                new ObjectParameter("benutzer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<qry_ProjekteIndex>("sp_Warenkorbprojekte", benutzerParameter);
        }
    
        public virtual ObjectResult<qry_ProjekteIndex> sp_Warenkorbprojekte(string benutzer, MergeOption mergeOption)
        {
            var benutzerParameter = benutzer != null ?
                new ObjectParameter("benutzer", benutzer) :
                new ObjectParameter("benutzer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<qry_ProjekteIndex>("sp_Warenkorbprojekte", mergeOption, benutzerParameter);
        }
    
        [DbFunction("AkquiseEntities", "fn_Volltext")]
        public virtual IQueryable<Nullable<int>> fn_Volltext(string such)
        {
            var suchParameter = such != null ?
                new ObjectParameter("such", such) :
                new ObjectParameter("such", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nullable<int>>("[AkquiseEntities].[fn_Volltext](@such)", suchParameter);
        }
    }
}
